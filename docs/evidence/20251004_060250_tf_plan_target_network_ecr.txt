[0m[1mmodule.network.data.aws_vpc.default: Reading...[0m[0m
[0m[1mmodule.ecr.aws_s3_bucket.artifacts: Refreshing state... [id=nickelth-mlops-artifacts][0m
[0m[1mmodule.ecr.data.aws_iam_policy_document.bucket_policy: Reading...[0m[0m
[0m[1mmodule.ecr.data.aws_iam_policy_document.bucket_policy: Read complete after 0s [id=4225914290][0m
[0m[1mmodule.network.data.aws_vpc.default: Read complete after 1s [id=vpc-0fbda65c351254bb3][0m
[0m[1mmodule.network.data.aws_subnets.default: Reading...[0m[0m
[0m[1mmodule.network.data.aws_subnets.default: Read complete after 0s [id=us-west-2][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.ecr.aws_s3_bucket_policy.artifacts[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "artifacts" {
      [32m+[0m[0m bucket = "nickelth-mlops-artifacts"
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "s3:*"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Bool = {
                              [32m+[0m[0m "aws:SecureTransport" = "false"
                            }
                        }
                      [32m+[0m[0m Effect    = "Deny"
                      [32m+[0m[0m Principal = "*"
                      [32m+[0m[0m Resource  = [
                          [32m+[0m[0m "arn:aws:s3:::nickelth-mlops-artifacts/*",
                          [32m+[0m[0m "arn:aws:s3:::nickelth-mlops-artifacts",
                        ]
                      [32m+[0m[0m Sid       = "HttpsOnly"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
    }

[1m  # module.ecr.aws_s3_bucket_public_access_block.artifacts[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "artifacts" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = "nickelth-mlops-artifacts"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1m  # module.ecr.aws_s3_bucket_server_side_encryption_configuration.artifacts[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_server_side_encryption_configuration" "artifacts" {
      [32m+[0m[0m bucket = "nickelth-mlops-artifacts"
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m apply_server_side_encryption_by_default {
              [32m+[0m[0m sse_algorithm     = "AES256"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
    }

[1m  # module.ecr.aws_s3_bucket_versioning.artifacts[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "artifacts" {
      [32m+[0m[0m bucket = "nickelth-mlops-artifacts"
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.network.data.aws_cloudwatch_log_group.api[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_cloudwatch_log_group" "api" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m creation_time     = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m kms_key_id        = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/mlops/api"
      [32m+[0m[0m retention_in_days = (known after apply)
      [32m+[0m[0m tags              = (known after apply)
    }

[1m  # module.network.data.aws_lb.api[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_lb" "api" {
      [32m+[0m[0m access_logs                                                  = (known after apply)
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m client_keep_alive                                            = (known after apply)
      [32m+[0m[0m connection_logs                                              = (known after apply)
      [32m+[0m[0m customer_owned_ipv4_pool                                     = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                                       = (known after apply)
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m dns_record_client_routing_policy                             = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = (known after apply)
      [32m+[0m[0m enable_cross_zone_load_balancing                             = (known after apply)
      [32m+[0m[0m enable_deletion_protection                                   = (known after apply)
      [32m+[0m[0m enable_http2                                                 = (known after apply)
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = (known after apply)
      [32m+[0m[0m enable_waf_fail_open                                         = (known after apply)
      [32m+[0m[0m enable_xff_client_port                                       = (known after apply)
      [32m+[0m[0m enable_zonal_shift                                           = (known after apply)
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = (known after apply)
      [32m+[0m[0m internal                                                     = (known after apply)
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m ipam_pools                                                   = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = (known after apply)
      [32m+[0m[0m name                                                         = "mlops-api-alb"
      [32m+[0m[0m preserve_host_header                                         = (known after apply)
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnet_mapping                                               = (known after apply)
      [32m+[0m[0m subnets                                                      = (known after apply)
      [32m+[0m[0m tags                                                         = (known after apply)
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = (known after apply)
      [32m+[0m[0m zone_id                                                      = (known after apply)
    }

[1m  # module.network.data.aws_lb_target_group.api[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_lb_target_group" "api" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = (known after apply)
      [32m+[0m[0m health_check                       = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = (known after apply)
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = (known after apply)
      [32m+[0m[0m port                               = (known after apply)
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = (known after apply)
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = (known after apply)
      [32m+[0m[0m slow_start                         = (known after apply)
      [32m+[0m[0m stickiness                         = (known after apply)
      [32m+[0m[0m tags                               = (known after apply)
      [32m+[0m[0m target_type                        = (known after apply)
      [32m+[0m[0m vpc_id                             = (known after apply)
    }

[1m  # module.network.data.aws_security_group.alb[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_security_group" "alb" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m tags        = (known after apply)
      [32m+[0m[0m vpc_id      = (known after apply)
    }

[1m  # module.network.data.aws_security_group.tasks[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_security_group" "tasks" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m tags        = (known after apply)
      [32m+[0m[0m vpc_id      = (known after apply)
    }

[1m  # module.network.aws_cloudwatch_log_group.api[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "api" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/mlops/api"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 14
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Managed" = "terraform"
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
    }

[1m  # module.network.aws_lb.api[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "api" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m client_keep_alive                                            = 3600
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = false
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enable_zonal_shift                                           = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = false
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = "mlops-api-alb"
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = [
          [32m+[0m[0m "subnet-0384561db8c07163c",
          [32m+[0m[0m "subnet-08326af247b075d10",
          [32m+[0m[0m "subnet-09d851ed375890f2d",
          [32m+[0m[0m "subnet-0d521901e37cb965e",
        ]
      [32m+[0m[0m tags                                                         = {
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m tags_all                                                     = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Managed" = "terraform"
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)

      [32m+[0m[0m subnet_mapping (known after apply)
    }

[1m  # module.network.aws_lb_listener.http[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "http" {
      [32m+[0m[0m arn                                                                   = (known after apply)
      [32m+[0m[0m id                                                                    = (known after apply)
      [32m+[0m[0m load_balancer_arn                                                     = (known after apply)
      [32m+[0m[0m port                                                                  = 80
      [32m+[0m[0m protocol                                                              = "HTTP"
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_header_name               = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_issuer_header_name        = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_leaf_header_name          = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_serial_number_header_name = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_subject_header_name       = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_mtls_clientcert_validity_header_name      = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_cipher_suite_header_name              = (known after apply)
      [32m+[0m[0m routing_http_request_x_amzn_tls_version_header_name                   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_credentials_header_value   = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_headers_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_methods_header_value       = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_allow_origin_header_value        = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_expose_headers_header_value      = (known after apply)
      [32m+[0m[0m routing_http_response_access_control_max_age_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_content_security_policy_header_value            = (known after apply)
      [32m+[0m[0m routing_http_response_server_enabled                                  = (known after apply)
      [32m+[0m[0m routing_http_response_strict_transport_security_header_value          = (known after apply)
      [32m+[0m[0m routing_http_response_x_content_type_options_header_value             = (known after apply)
      [32m+[0m[0m routing_http_response_x_frame_options_header_value                    = (known after apply)
      [32m+[0m[0m ssl_policy                                                            = (known after apply)
      [32m+[0m[0m tags_all                                                              = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Managed" = "terraform"
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m tcp_idle_timeout_seconds                                              = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }

      [32m+[0m[0m mutual_authentication (known after apply)
    }

[1m  # module.network.aws_lb_target_group.api[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "api" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "mlops-api-tg"
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 8000
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Managed" = "terraform"
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m target_type                        = "ip"
      [32m+[0m[0m vpc_id                             = "vpc-0fbda65c351254bb3"

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = "200-399"
          [32m+[0m[0m path                = "/health"
          [32m+[0m[0m port                = "traffic-port"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 5
          [32m+[0m[0m unhealthy_threshold = 2
        }

      [32m+[0m[0m stickiness (known after apply)

      [32m+[0m[0m target_failover (known after apply)

      [32m+[0m[0m target_group_health (known after apply)

      [32m+[0m[0m target_health_state (known after apply)
    }

[1m  # module.network.aws_security_group.alb[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "alb" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "ALB inbound 80/443"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "mlops-alb-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Managed" = "terraform"
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0fbda65c351254bb3"
    }

[1m  # module.network.aws_security_group.tasks[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "tasks" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "ECS tasks egress only"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "mlops-ecs-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Env"     = "dev"
          [32m+[0m[0m "Managed" = "terraform"
          [32m+[0m[0m "Project" = "mlops-sklearn-portfolio"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0fbda65c351254bb3"
    }

[1m  # module.network.aws_security_group_rule.alb_to_tasks_8000[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "alb_to_tasks_8000" {
      [32m+[0m[0m from_port                = 8000
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8000
      [32m+[0m[0m type                     = "ingress"
    }

[1mPlan:[0m 11 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [33m~[0m[0m alb_arn                 = "arn:aws:elasticloadbalancing:us-west-2:438336773404:loadbalancer/app/mlops-api-alb/2108295255369a54" -> (known after apply)
  [32m+[0m[0m alb_dns                 = (known after apply)
  [33m~[0m[0m alb_dns_name            = "mlops-api-alb-1702823157.us-west-2.elb.amazonaws.com" -> (known after apply)
  [32m+[0m[0m alb_security_group_id   = (known after apply)
  [33m~[0m[0m bucket_name             = "yes" [33m->[0m[0m "nickelth-mlops-artifacts"
  [32m+[0m[0m tasks_security_group_id = (known after apply)
  [33m~[0m[0m tg_arn                  = "arn:aws:elasticloadbalancing:us-west-2:438336773404:targetgroup/mlops-api-tg/312f527296c51177" -> (known after apply)
[33m╷[0m[0m
[33m│[0m [0m[1m[33mWarning: [0m[0m[1mResource targeting is in effect[0m
[33m│[0m [0m
[33m│[0m [0m[0mYou are creating a plan with the -target option, which means that the result of this plan may not represent all of the changes requested by the current configuration.
[33m│[0m [0m
[33m│[0m [0mThe -target option is not for routine use, and is provided only for exceptional situations such as recovering from errors or mistakes, or when Terraform specifically suggests to use it as part of an error message.
[33m╵[0m[0m
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
